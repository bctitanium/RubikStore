@*@model IEnumerable<RubikStore.Models.QLRubik>*@
@*@model IEnumerable<RubikStore.Models.Rubik>*@

@using RubikStore.Models
@using PagedList.Mvc;
@model  PagedList.PagedList<Rubik>

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

@foreach (var item in Model)
{
    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
        <div class="panel panel-default" style="background-color:lightblue; margin:20px">
            <div class="panel panel-heading" style="background-color:lightskyblue">
                <strong>Tên: </strong>
                <strong>@item.Ten</strong>
            </div>

            <div class="panel-body">
                <p>
                    <img src="@item.PicCover" width="350" style="padding-left:50px" />
                </p>

                <p>
                    <strong>Loại: </strong>
                    @Html.DisplayFor(modelItem => item.Loai)
                </p>

                <p>
                    <strong>Mô tả: </strong>
                </p>
                <p class="show-read-more">
                    @Html.DisplayFor(modelItem => item.MoTa)
                </p>

                <p>
                    <strong>Hãng: </strong>
                    @Html.DisplayFor(modelItem => item.Hang)
                </p>

                <p>
                    <strong>Giá: </strong>
                    @Html.DisplayFor(modelItem => item.Gia)
                    @String.Format("{0:0,0}", item.Gia) VNĐ
                </p>

                <p>
                    <strong>Còn lại: </strong>
                    @Html.DisplayFor(modelItem => item.SoLgTon)
                </p>

                <p>
                    <strong>Ngày cập nhật: </strong>
                    @Html.DisplayFor(modelItem => item.NgayCapNhat)
                </p>

                <p id="mau-nut">
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })*@

                    @*<a href="@Url.Action("Edit", "RubikStore", new { id = item.Id})" class="btn btn-primary">Edit</a> |*@
                    <a href="@Url.Action("Details", "RubikStore", new { id = item.Id})" class="btn btn-primary">Xem chi tiết</a>
                    @*<a href="@Url.Action("Delete", "RubikStore", new { id = item.Id})" class="btn btn-primary">Delete</a>*@
                </p>
            </div>
        </div>
    </div>
}

<div>
    <div>
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
    </div>

    <div class="MenuTrang">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))
    </div>
</div>

<style>
    .MenuTrang li
    {
        display:inline;
    }
</style>

<style type="text/css">
    #mau-nut a 
    {
        clear: both;
        background-color: orange;
        color: snow;
    }

    #mau-nut a:hover 
    {
        background-color: darkcyan;
        color: snow;
    }

</style>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
    $(document).ready(function () {
        var maxLength = 100;
        $(".show-read-more").each(function () {
            var myStr = $(this).text();
            if ($.trim(myStr).length > maxLength) {
                var newStr = myStr.substring(0, maxLength);
                var removedStr = myStr.substring(maxLength, $.trim(myStr).length);
                $(this).empty().html(newStr);
                $(this).append(' <a href="javascript:void(0);" class="read-more">đọc tiếp...</a>');
                $(this).append('<span class="more-text">' + removedStr + '</span>');
            }
        });
        $(".read-more").click(function () {
            $(this).siblings(".more-text").contents().unwrap();
            $(this).remove();
        });
    });
</script>
<style>
    .show-read-more .more-text {
        display: none;
    }
</style>